{"ast":null,"code":"var _jsxFileName = \"/home/saket/Downloads/pdf-front/my-app/src/PdfExtracter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./PdfUploader.css\"; // import here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfExtractor() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a PDF file first!\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      setLoading(true);\n\n      // Upload resume to backend\n      await axios.post(\"http://localhost:8080/resume/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      // After 1.5 sec, go to Email Preview page\n      setTimeout(() => {\n        navigate(\"/email\");\n      }, 1500);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Upload failed!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Uploading...\" : \"Next →\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfExtractor, \"+YfdS6NqWvBgxnMbR056bIenLtY=\", false, function () {\n  return [useNavigate];\n});\n_c = PdfExtractor;\nexport default PdfExtractor;\nvar _c;\n$RefreshReg$(_c, \"PdfExtractor\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","PdfExtractor","_s","file","setFile","loading","setLoading","navigate","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","post","headers","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/saket/Downloads/pdf-front/my-app/src/PdfExtracter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./PdfUploader.css\"; // import here\n\nfunction PdfExtractor() {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a PDF file first!\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      setLoading(true);\n\n      // Upload resume to backend\n      await axios.post(\"http://localhost:8080/resume/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      // After 1.5 sec, go to Email Preview page\n      setTimeout(() => {\n        navigate(\"/email\");\n      }, 1500);\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Upload failed!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Resume PDF</h2>\n      <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={loading}>\n        {loading ? \"Uploading...\" : \"Next →\"}\n      </button>\n    </div>\n  );\n}\n\nexport default PdfExtractor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACT,IAAI,EAAE,OAAOU,KAAK,CAAC,iCAAiC,CAAC;IAE1D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEb,IAAI,CAAC;IAE7B,IAAI;MACFG,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMT,KAAK,CAACoB,IAAI,CAAC,qCAAqC,EAAEH,QAAQ,EAAE;QAChEI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACF;MACAC,UAAU,CAAC,MAAM;QACfZ,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BP,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,iBAAiB;MAACC,QAAQ,EAAErB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E1B,OAAA;MAAQ8B,OAAO,EAAElB,YAAa;MAACmB,QAAQ,EAAE1B,OAAQ;MAAAiB,QAAA,EAC9CjB,OAAO,GAAG,cAAc,GAAG;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CA5CQD,YAAY;EAAA,QAGFH,WAAW;AAAA;AAAAkC,EAAA,GAHrB/B,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}