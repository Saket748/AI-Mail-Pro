{"ast":null,"code":"var _jsxFileName = \"/home/saket/Downloads/pdf-front/my-app/src/SendEmailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendEmailPage() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const recipients = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.csvList) || []; // [{name, email}]\n\n  const [currentEmail, setCurrentEmail] = useState(null); // current sending email\n  const [results, setResults] = useState([]); // past results\n  const [sending, setSending] = useState(false);\n  const handleSendEmails = async () => {\n    if (recipients.length === 0) return alert(\"No recipients found!\");\n    setSending(true);\n    setResults([]);\n    setCurrentEmail({\n      email: \"\",\n      status: \"sending\"\n    });\n    try {\n      const response = await axios.get(\"http://localhost:8080/resume/send-bulk\");\n      const sentEmails = Array.isArray(response.data.sent) ? response.data.sent : [];\n      const failedEmails = Array.isArray(response.data.failed) ? response.data.failed : [];\n\n      // Combine all emails with status\n      const allResults = [...sentEmails.map(email => ({\n        email,\n        status: \"sent\"\n      })), ...failedEmails.map(email => ({\n        email,\n        status: \"failed\"\n      }))];\n\n      // Sequentially show each email\n      let i = 0;\n      const showNextEmail = () => {\n        if (i >= allResults.length) {\n          setCurrentEmail(null);\n          setSending(false);\n          return;\n        }\n        const emailItem = allResults[i];\n        const match = recipients.find(r => r.email === emailItem.email);\n        const name = (match === null || match === void 0 ? void 0 : match.name) || \"\";\n        setCurrentEmail({\n          name,\n          email: emailItem.email,\n          status: \"sending\"\n        });\n\n        // Show sending for 1.5s then mark as sent/failed\n        setTimeout(() => {\n          setResults(prev => [...prev, {\n            ...emailItem,\n            name\n          }]);\n          setCurrentEmail(null); // remove from top\n          i++;\n          setTimeout(showNextEmail, 500); // small delay before next\n        }, 1500);\n      };\n      showNextEmail();\n    } catch (error) {\n      console.error(\"Error sending emails:\", error);\n      alert(\"Failed to send emails! Check backend logs.\");\n      setSending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendEmails,\n      disabled: sending,\n      children: sending ? \"Sending...\" : \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [currentEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          border: \"1px solid #ccc\",\n          marginBottom: \"5px\"\n        },\n        children: [\"Sending... \", currentEmail.name, \" (\", currentEmail.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), results.map((r, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          border: \"1px solid #ccc\",\n          marginBottom: \"5px\",\n          color: r.status === \"sent\" ? \"green\" : \"red\"\n        },\n        children: [r.name, \" (\", r.email, \") - \", r.status.toUpperCase(), \" \", r.status === \"sent\" ? \"✅\" : \"❌\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(SendEmailPage, \"CrwpiPaE7XIgz7xQxUvJibsDDSI=\", false, function () {\n  return [useLocation];\n});\n_c = SendEmailPage;\nexport default SendEmailPage;\nvar _c;\n$RefreshReg$(_c, \"SendEmailPage\");","map":{"version":3,"names":["React","useState","axios","useLocation","jsxDEV","_jsxDEV","SendEmailPage","_s","_location$state","location","recipients","state","csvList","currentEmail","setCurrentEmail","results","setResults","sending","setSending","handleSendEmails","length","alert","email","status","response","get","sentEmails","Array","isArray","data","sent","failedEmails","failed","allResults","map","i","showNextEmail","emailItem","match","find","r","name","setTimeout","prev","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginTop","border","marginBottom","index","color","toUpperCase","_c","$RefreshReg$"],"sources":["/home/saket/Downloads/pdf-front/my-app/src/SendEmailPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction SendEmailPage() {\n  const location = useLocation();\n  const recipients = location.state?.csvList || []; // [{name, email}]\n\n  const [currentEmail, setCurrentEmail] = useState(null); // current sending email\n  const [results, setResults] = useState([]); // past results\n  const [sending, setSending] = useState(false);\n\n  const handleSendEmails = async () => {\n    if (recipients.length === 0) return alert(\"No recipients found!\");\n    setSending(true);\n    setResults([]);\n    setCurrentEmail({ email: \"\", status: \"sending\" });\n\n    try {\n      const response = await axios.get(\"http://localhost:8080/resume/send-bulk\");\n\n      const sentEmails = Array.isArray(response.data.sent) ? response.data.sent : [];\n      const failedEmails = Array.isArray(response.data.failed) ? response.data.failed : [];\n\n      // Combine all emails with status\n      const allResults = [...sentEmails.map(email => ({ email, status: \"sent\" })), \n                          ...failedEmails.map(email => ({ email, status: \"failed\" }))];\n\n      // Sequentially show each email\n      let i = 0;\n      const showNextEmail = () => {\n        if (i >= allResults.length) {\n          setCurrentEmail(null);\n          setSending(false);\n          return;\n        }\n\n        const emailItem = allResults[i];\n        const match = recipients.find(r => r.email === emailItem.email);\n        const name = match?.name || \"\";\n        setCurrentEmail({ name, email: emailItem.email, status: \"sending\" });\n\n        // Show sending for 1.5s then mark as sent/failed\n        setTimeout(() => {\n          setResults(prev => [...prev, { ...emailItem, name }]);\n          setCurrentEmail(null); // remove from top\n          i++;\n          setTimeout(showNextEmail, 500); // small delay before next\n        }, 1500);\n      };\n\n      showNextEmail();\n\n    } catch (error) {\n      console.error(\"Error sending emails:\", error);\n      alert(\"Failed to send emails! Check backend logs.\");\n      setSending(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Send Emails</h2>\n      <button onClick={handleSendEmails} disabled={sending}>\n        {sending ? \"Sending...\" : \"Send Email\"}\n      </button>\n\n      <div style={{ marginTop: \"20px\" }}>\n        {currentEmail && (\n          <div style={{ padding: \"10px\", border: \"1px solid #ccc\", marginBottom: \"5px\" }}>\n            Sending... {currentEmail.name} ({currentEmail.email})\n          </div>\n        )}\n\n        {results.map((r, index) => (\n          <div\n            key={index}\n            style={{\n              padding: \"10px\",\n              border: \"1px solid #ccc\",\n              marginBottom: \"5px\",\n              color: r.status === \"sent\" ? \"green\" : \"red\",\n            }}\n          >\n            {r.name} ({r.email}) - {r.status.toUpperCase()} {r.status === \"sent\" ? \"✅\" : \"❌\"}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SendEmailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,UAAU,GAAG,EAAAF,eAAA,GAAAC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,OAAO,KAAI,EAAE,CAAC,CAAC;;EAElD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIT,UAAU,CAACU,MAAM,KAAK,CAAC,EAAE,OAAOC,KAAK,CAAC,sBAAsB,CAAC;IACjEH,UAAU,CAAC,IAAI,CAAC;IAChBF,UAAU,CAAC,EAAE,CAAC;IACdF,eAAe,CAAC;MAAEQ,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;IAEjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,wCAAwC,CAAC;MAE1E,MAAMC,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAACC,IAAI,CAAC,GAAGN,QAAQ,CAACK,IAAI,CAACC,IAAI,GAAG,EAAE;MAC9E,MAAMC,YAAY,GAAGJ,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAACG,MAAM,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAACG,MAAM,GAAG,EAAE;;MAEpF;MACA,MAAMC,UAAU,GAAG,CAAC,GAAGP,UAAU,CAACQ,GAAG,CAACZ,KAAK,KAAK;QAAEA,KAAK;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC,EACvD,GAAGQ,YAAY,CAACG,GAAG,CAACZ,KAAK,KAAK;QAAEA,KAAK;QAAEC,MAAM,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;;MAEhF;MACA,IAAIY,CAAC,GAAG,CAAC;MACT,MAAMC,aAAa,GAAGA,CAAA,KAAM;QAC1B,IAAID,CAAC,IAAIF,UAAU,CAACb,MAAM,EAAE;UAC1BN,eAAe,CAAC,IAAI,CAAC;UACrBI,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAEA,MAAMmB,SAAS,GAAGJ,UAAU,CAACE,CAAC,CAAC;QAC/B,MAAMG,KAAK,GAAG5B,UAAU,CAAC6B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClB,KAAK,KAAKe,SAAS,CAACf,KAAK,CAAC;QAC/D,MAAMmB,IAAI,GAAG,CAAAH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,IAAI,KAAI,EAAE;QAC9B3B,eAAe,CAAC;UAAE2B,IAAI;UAAEnB,KAAK,EAAEe,SAAS,CAACf,KAAK;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;;QAEpE;QACAmB,UAAU,CAAC,MAAM;UACf1B,UAAU,CAAC2B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;YAAE,GAAGN,SAAS;YAAEI;UAAK,CAAC,CAAC,CAAC;UACrD3B,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;UACvBqB,CAAC,EAAE;UACHO,UAAU,CAACN,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;QAClC,CAAC,EAAE,IAAI,CAAC;MACV,CAAC;MAEDA,aAAa,CAAC,CAAC;IAEjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CvB,KAAK,CAAC,4CAA4C,CAAC;MACnDH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKyC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3C,OAAA;MAAA2C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB/C,OAAA;MAAQgD,OAAO,EAAElC,gBAAiB;MAACmC,QAAQ,EAAErC,OAAQ;MAAA+B,QAAA,EAClD/B,OAAO,GAAG,YAAY,GAAG;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAET/C,OAAA;MAAKyC,KAAK,EAAE;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,GAC/BnC,YAAY,iBACXR,OAAA;QAAKyC,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAES,MAAM,EAAE,gBAAgB;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAT,QAAA,GAAC,aACnE,EAACnC,YAAY,CAAC4B,IAAI,EAAC,IAAE,EAAC5B,YAAY,CAACS,KAAK,EAAC,GACtD;MAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EAEArC,OAAO,CAACmB,GAAG,CAAC,CAACM,CAAC,EAAEkB,KAAK,kBACpBrD,OAAA;QAEEyC,KAAK,EAAE;UACLC,OAAO,EAAE,MAAM;UACfS,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBE,KAAK,EAAEnB,CAAC,CAACjB,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;QACzC,CAAE;QAAAyB,QAAA,GAEDR,CAAC,CAACC,IAAI,EAAC,IAAE,EAACD,CAAC,CAAClB,KAAK,EAAC,MAAI,EAACkB,CAAC,CAACjB,MAAM,CAACqC,WAAW,CAAC,CAAC,EAAC,GAAC,EAACpB,CAAC,CAACjB,MAAM,KAAK,MAAM,GAAG,GAAG,GAAG,GAAG;MAAA,GAR3EmC,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASP,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7C,EAAA,CAtFQD,aAAa;EAAA,QACHH,WAAW;AAAA;AAAA0D,EAAA,GADrBvD,aAAa;AAwFtB,eAAeA,aAAa;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}